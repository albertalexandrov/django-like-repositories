"""empty message

Revision ID: 9cff1f7d064a
Revises: 02fd45a40c4e
Create Date: 2025-06-02 21:41:29.166045

"""

import random
import time
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import select
from sqlalchemy.orm import Session

from models import PublicationStatus, Section, Subsection

# revision identifiers, used by Alembic.
revision: str = "9cff1f7d064a"
down_revision: Union[str, None] = "02fd45a40c4e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def populate_publication_statuses(session: Session) -> list[PublicationStatus]:
    data = [
        {"code": "published", "name": "Опубликован"},
        {"code": "unpublished", "name": "Неопубликован"},
    ]
    statuses = [PublicationStatus(**item) for item in data]
    session.add_all(statuses)
    session.commit()
    return statuses


def populate_sections(session: Session, statuses: list[PublicationStatus]) -> list[Section]:
    names = [
        "Управление аккаунтом",
        "Управление доступом",
        "Действующие договоры с Х5",
        "Заявки и консультации",
        "Финансовые документы Х5 Недвижимость",
        "Личный кабинет подрядчика ТС5",
        "Настройки",
    ]
    sections = []
    for name in names:
        section = Section(name=name, status=random.choice(statuses))
        sections.append(section)
    session.add_all(sections)
    session.commit()
    return sections


def populate_subsections(session: Session, statuses: list[PublicationStatus], sections: list[Section]):
    section = random.choice(sections)
    # todo: почему-то если передавать просто section при создании, то валится с ошибкой
    subsection = Subsection(name="Полезные документы", status=random.choice(statuses), section_id=section.id)
    session.add(subsection)
    session.commit()


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "publication_statuses",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "widgets",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "sections",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["publication_statuses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "subsections",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["subsections.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["publication_statuses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "article_contents",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("subtitle", sa.String(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("subsection_id", sa.Integer(), nullable=False),
        sa.Column("widget_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subsection_id"],
            ["subsections.id"],
        ),
        sa.ForeignKeyConstraint(
            ["widget_id"],
            ["widgets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with Session(bind=op.get_bind()) as session:
        statuses = populate_publication_statuses(session)
        sections = populate_sections(session, statuses)
        subsections = populate_subsections(session, statuses, sections)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("article_contents")
    op.drop_table("subsections")
    op.drop_table("sections")
    op.drop_table("widgets")
    op.drop_table("publication_statuses")
    # ### end Alembic commands ###
